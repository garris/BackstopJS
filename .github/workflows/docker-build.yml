name: Docker Build & Push

on:
  workflow_dispatch:
  workflow_call:

permissions:
  actions: write
  checks: write
  contents: write
  pull-requests: write
  packages: write

env:
  BRANCH_NAME: ${{ github.event.pull_request.head_ref || github.event.pull_request.head.ref_name || github.head_ref || github.ref_name }}
  NODE_VERSION: 20
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    name: üê≥ Build and Push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Set Name and Tag Vars
        env:
          name: "${{ env.BRANCH_NAME }}"
        run: |
          echo "IMAGE_NAME_LC=${IMAGE_NAME,,}" >>${GITHUB_ENV}
          echo "TAG=${name/\//-}" >> $GITHUB_ENV
          echo "PV=$(cat package.json | jq -r '.version')" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚¨¢ Setup Node & Cache
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: ‚Üß Install
        run: npm ci --verbose --foreground-scripts

      - name: üê≥ Build Docker Builder
        run: |
          npm run --verbose --foreground-scripts init-docker-builder

      - name: üê≥ Build & Push Docker
        run: |
          docker buildx build --push --platform linux/amd64,linux/arm64 -t $REGISTRY/$IMAGE_NAME_LC:$TAG --build-arg BACKSTOPJS_VERSION=$PV docker

      # - name: üê≥ Load Docker
      #   run: |
      #     npm run --verbose --foreground-scripts load-docker

      # - name: üê≥ Push to ghcr.io
      #   run: |
      #     docker tag backstopjs/backstopjs:$PV $REGISTRY/$IMAGE_NAME_LC:$TAG
      #     docker push $REGISTRY/$IMAGE_NAME_LC:$TAG
